---
import { loadProductsFromCart } from "@/actions/cart/load-products-from-cart.action";
import MainLayout from "@/layouts/MainLayout.astro";
import "@/styles/global.css";
import { Formatter } from "@/utils";

const productsInCartCookie = Astro.cookies.get("cart")?.json() ?? [];

const { data: products, error } = await Astro.callAction(
  loadProductsFromCart,
  productsInCartCookie
);

if (error || !products) {
  return Astro.redirect("/");
}

const total = products.reduce(
  (acc, product) => acc + product.price * product.quantity,
  0
);
---

<MainLayout title="Carrito de compras">
  <div class="flex flex-col min-h-[calc(100vh-6rem)]">
    <h1 class="text-3xl font-bold mb-8 text-gray-800">Carrito de Compras</h1>

    <section class="grid grid-cols-1 sm:grid-cols-2 gap-8 flex-grow">
      <!-- Productos -->
      <div class="order-2 sm:order-1 bg-white p-6 rounded-lg shadow-lg">
        <h2 class="text-xl font-semibold text-gray-700 mb-4">Productos en tu carrito</h2>
        <a
          href="javascript:history.back()"
          class="hover:underline text-blue-500 hover:text-blue-600 mb-4 inline-block"
        >
          &larr; Regresar
        </a>

        {products.length > 0 ? (
          products.map((product) => (
            <div class="flex gap-5 mt-5 border-b border-gray-200 pb-5">
              <img
                src={product.image}
                alt={product.title}
                class="w-24 h-24 object-cover rounded-lg shadow-md"
              />

              <div class="flex flex-col justify-between">
                <a
                  href={`/products/${product.slug}`}
                  class="text-lg font-semibold text-gray-800 hover:underline"
                >
                  {product.title}
                </a>
                <p class="text-gray-600 font-bold">${product.price}</p>
                <p class="text-sm text-gray-500">
                  Talla: <span class="font-semibold">{product.size}</span>
                </p>
                <p class="text-sm text-gray-500">
                  Cantidad: <span class="font-semibold">{product.quantity}</span>
                </p>
                <button
                  data-id={product.productId}
                  data-size={product.size}
                  class="text-red-500 btn-delete cursor-pointer hover:text-red-600 mt-2"
                >
                  Remover
                </button>
              </div>
            </div>
          ))
        ) : (
          <p class="text-gray-500 mt-4">Tu carrito está vacío.</p>
        )}
      </div>

<!-- Totales -->
<div class="bg-gray-800 text-white p-4 rounded-lg shadow-lg order-1 max-h-[50vh] self-start">
  <h2 class="text-xl font-semibold mb-4">Resumen de Compra</h2>

  <div class="flex justify-between text-gray-400 mb-2">
    <span>Envío</span>
    <span>Gratis</span>
  </div>

  <div class="flex justify-between text-gray-400 mb-2">
    <span>Subtotal</span>
    <span>{Formatter.currency(total)}</span>
  </div>

  <div class="flex justify-between text-gray-400 mb-2">
    <span>Impuesto</span>
    <span>{Formatter.currency(total * 0.15)}</span>
  </div>

  <div class="flex justify-between text-xl font-bold mb-4">
    <span>Total</span>
    <span>{Formatter.currency(total * 1.15)}</span>
  </div>

  <button
    class="cursor-pointer w-full bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-lg font-bold transition-all"
  >
    Proceder al Pago
  </button>
</div>
    </section>
  </div>
</MainLayout>

<script>
  import { itemsInCart } from "@/store";
  import { CartCookiesClient } from "@/utils";
  import { navigate } from "astro:transitions/client";

  document.addEventListener("astro:page-load", () => {
    const deleteButtons: NodeListOf<HTMLButtonElement> =
      document.querySelectorAll(".btn-delete");

    deleteButtons.forEach((button) => {
      button.addEventListener("click", (e) => {
        const target = e.target as HTMLButtonElement;
        const productId = target.dataset.id ?? "";
        const size = target.dataset.size ?? "";

        const cart = CartCookiesClient.removeItem(productId, size);
        itemsInCart.set(cart.length);

        navigate('/cart');
      });
    });
  });
</script>